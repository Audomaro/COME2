/******************************************************************************/
/*        Generated by IBExpert 2014.6.17.1 19/10/2014 08:01:38 p. m.         */
/******************************************************************************/

SET SQL DIALECT 3;

SET NAMES NONE;

CREATE DATABASE '127.0.0.1:C:\Users\Audomaro\Desktop\COME.FDB'
USER 'SYSDBA' PASSWORD 'masterkey'
PAGE_SIZE 16384
DEFAULT CHARACTER SET NONE COLLATION NONE;



/******************************************************************************/
/*                                 Generators                                 */
/******************************************************************************/

CREATE GENERATOR GEN_CAT_CLIENTES_ID;
SET GENERATOR GEN_CAT_CLIENTES_ID TO 372;

CREATE GENERATOR GEN_MERCANCIA_ID;
SET GENERATOR GEN_MERCANCIA_ID TO 12;



SET TERM ^ ; 



/******************************************************************************/
/*                             Stored Procedures                              */
/******************************************************************************/

CREATE PROCEDURE SP_CLIENTES_CNT
RETURNS (
    TOTAL INTEGER)
AS
BEGIN
  SUSPEND;
END^





CREATE PROCEDURE SP_CLIENTES_DEL (
    ID VARCHAR(50))
AS
BEGIN
  EXIT;
END^





CREATE PROCEDURE SP_CLIENTES_ELT
RETURNS (
    ULTIMO INTEGER)
AS
BEGIN
  SUSPEND;
END^





CREATE PROCEDURE SP_CLIENTES_INS (
    CLAVE VARCHAR(50),
    DESCRIPCION VARCHAR(50))
AS
BEGIN
  EXIT;
END^





CREATE PROCEDURE SP_CLIENTES_MOD (
    ID INTEGER,
    CLAVE VARCHAR(50),
    DESCRIPCION VARCHAR(50))
AS
BEGIN
  EXIT;
END^





CREATE PROCEDURE SP_MERCANCIAS_DEL (
    ID_MERC INTEGER)
AS
BEGIN
  EXIT;
END^





CREATE PROCEDURE SP_MERCANCIAS_INS (
    CLIENTE VARCHAR(50),
    ORIGEN INTEGER,
    DESTINO INTEGER,
    MERC_TIPO INTEGER,
    PESO FLOAT,
    CANTIDAD INTEGER,
    PESO_TIPO INTEGER,
    FEC_SALIDA DATE,
    FEC_ENTREGA DATE,
    FLETE FLOAT,
    OBS VARCHAR(250))
AS
BEGIN
  EXIT;
END^





CREATE PROCEDURE SP_MERCANCIAS_MOD (
    ID_MERC INTEGER,
    CLIENTE VARCHAR(50),
    ORIGEN INTEGER,
    DESTINO INTEGER,
    MERC_TIPO INTEGER,
    PESO FLOAT,
    CANTIDAD INTEGER,
    PESO_TIPO INTEGER,
    FEC_SALIDA DATE,
    FEC_ENTREGA DATE,
    FLETE FLOAT,
    OBS VARCHAR(250))
AS
BEGIN
  EXIT;
END^






SET TERM ; ^



/******************************************************************************/
/*                                   Tables                                   */
/******************************************************************************/



CREATE TABLE CAT_CLIENTES (
    ID           INTEGER NOT NULL,
    CLAVE        VARCHAR(50) NOT NULL,
    DESCRIPCION  VARCHAR(50)
);

CREATE TABLE CAT_MERCANCIA (
    ID           INTEGER NOT NULL,
    DESCRIPCION  VARCHAR(250) NOT NULL
);

CREATE TABLE CAT_PAIS (
    ID           INTEGER NOT NULL,
    DESCRIPCION  VARCHAR(50) NOT NULL
);

CREATE TABLE CAT_PESO (
    ID           INTEGER NOT NULL,
    ABREV        VARCHAR(50) NOT NULL,
    DESCRIPCION  VARCHAR(50) NOT NULL
);

CREATE TABLE MERCANCIAS (
    ID             INTEGER NOT NULL,
    CLIENTE        VARCHAR(50) NOT NULL,
    PAIS_ORIGEN    INTEGER,
    PAIS_DESTINO   INTEGER,
    MERC_TIPO      INTEGER NOT NULL,
    PESO           FLOAT NOT NULL,
    CANTIDAD       INTEGER,
    PESO_TIPO      INTEGER NOT NULL,
    FEC_SALIDA     DATE NOT NULL,
    FEC_ENTREGA    DATE NOT NULL,
    FLETE          FLOAT NOT NULL,
    OBSERVACIONES  VARCHAR(250),
    ELIMINADO      SMALLINT
);



/******************************************************************************/
/*                                   Views                                    */
/******************************************************************************/


/* View: VW_CLIENTES */
CREATE VIEW VW_CLIENTES(
    "#",
    "Clave",
    "Descripcion")
AS
SELECT CC.id, CC.clave, CC.descripcion
FROM cat_clientes CC
ORDER BY CC.id
;



/* View: VW_MERCANCIAS */
CREATE VIEW VW_MERCANCIAS(
    "# MERCancia",
    "Cliente",
    "Origen",
    "Destino",
    "Cantidad",
    "Peso",
    "Fecha de salida",
    "Fecha de entrega",
    "Flete (dlls)",
    "Observaciones")
AS
SELECT
    MERC.id,
    CCLI.descripcion,
    CPO.descripcion,
    CPD.descripcion,
    MERC.cantidad || ' ' || cMERC.descripcion,
    MERC.peso || ' ' || cpes.abrev,
    MERC.fec_salida,
    MERC.fec_entrega,
    MERC.flete,
    MERC.observaciones
FROM mercancias MERC
JOIN cat_pais CPO on MERC.pais_origen = CPO.id
JOIN cat_pais CPD on MERC.pais_destino = CPD.id
JOIN cat_clientes CCLI on MERC.cliente = CCLI.clave
JOIN cat_mercancia CMERC on MERC.merc_tipo = CMERC.id
JOIN cat_peso CPES on MERC.peso_tipo = CPES.id
WHERE MERC.eliminado = 1
;




/******************************************************************************/
/*                             Unique Constraints                             */
/******************************************************************************/

ALTER TABLE CAT_CLIENTES ADD CONSTRAINT UNQ1_CAT_CLIENTES UNIQUE (CLAVE);
ALTER TABLE CAT_MERCANCIA ADD CONSTRAINT UNQ1_CAT_MERCANCIA UNIQUE (DESCRIPCION);
ALTER TABLE CAT_PAIS ADD CONSTRAINT UNQ1_CAT_PAIS UNIQUE (DESCRIPCION);
ALTER TABLE CAT_PESO ADD CONSTRAINT UNQ1_CAT_PESO UNIQUE (ABREV, DESCRIPCION);


/******************************************************************************/
/*                                Primary Keys                                */
/******************************************************************************/

ALTER TABLE CAT_CLIENTES ADD CONSTRAINT PK_CAT_CLIENTES PRIMARY KEY (ID);
ALTER TABLE CAT_MERCANCIA ADD CONSTRAINT PK_CAT_MERCANCIA PRIMARY KEY (ID);
ALTER TABLE CAT_PAIS ADD CONSTRAINT PK_CAT_PAIS PRIMARY KEY (ID);
ALTER TABLE CAT_PESO ADD CONSTRAINT PK_CAT_PESO PRIMARY KEY (ID);
ALTER TABLE MERCANCIAS ADD CONSTRAINT PK_MERCANCIAS PRIMARY KEY (ID, CLIENTE);


/******************************************************************************/
/*                                Foreign Keys                                */
/******************************************************************************/

ALTER TABLE MERCANCIAS ADD CONSTRAINT FK_MERCANCIAS_1 FOREIGN KEY (CLIENTE) REFERENCES CAT_CLIENTES (CLAVE);
ALTER TABLE MERCANCIAS ADD CONSTRAINT FK_MERCANCIAS_2 FOREIGN KEY (PAIS_ORIGEN) REFERENCES CAT_PAIS (ID);
ALTER TABLE MERCANCIAS ADD CONSTRAINT FK_MERCANCIAS_3 FOREIGN KEY (PAIS_DESTINO) REFERENCES CAT_PAIS (ID);
ALTER TABLE MERCANCIAS ADD CONSTRAINT FK_MERCANCIAS_4 FOREIGN KEY (MERC_TIPO) REFERENCES CAT_MERCANCIA (ID);
ALTER TABLE MERCANCIAS ADD CONSTRAINT FK_MERCANCIAS_5 FOREIGN KEY (PESO_TIPO) REFERENCES CAT_PESO (ID);


/******************************************************************************/
/*                                  Indices                                   */
/******************************************************************************/

CREATE INDEX CAT_CLIENTES_IDX1 ON CAT_CLIENTES (CLAVE);


/******************************************************************************/
/*                             Stored Procedures                              */
/******************************************************************************/


SET TERM ^ ;

ALTER PROCEDURE SP_CLIENTES_CNT
RETURNS (
    TOTAL INTEGER)
AS
BEGIN
  FOR SELECT COUNT(*)
  FROM vw_clientes
  INTO :total
DO
  SUSPEND;
END^


ALTER PROCEDURE SP_CLIENTES_DEL (
    ID VARCHAR(50))
AS
BEGIN
    DELETE FROM cat_clientes CC
    WHERE CC.id = :ID;
END^


ALTER PROCEDURE SP_CLIENTES_ELT
RETURNS (
    ULTIMO INTEGER)
AS
BEGIN
  FOR SELECT MAX(ID)
  FROM cat_clientes
  INTO :ultimo
DO
  SUSPEND;
END^


ALTER PROCEDURE SP_CLIENTES_INS (
    CLAVE VARCHAR(50),
    DESCRIPCION VARCHAR(50))
AS
BEGIN
  INSERT INTO cat_clientes VALUES (
  gen_id(gen_cat_clientes_id, 1),
  :clave,
  :descripcion);
END^


ALTER PROCEDURE SP_CLIENTES_MOD (
    ID INTEGER,
    CLAVE VARCHAR(50),
    DESCRIPCION VARCHAR(50))
AS
BEGIN
    UPDATE cat_clientes CC
    SET
        CC.clave = :clave,
        CC.descripcion = :descripcion
    WHERE CC.id = :id;
END^


ALTER PROCEDURE SP_MERCANCIAS_DEL (
    ID_MERC INTEGER)
AS
BEGIN
  UPDATE mercancias MERC set MERC.eliminado = 1
  --DELETE FROM mercancias MERC
  WHERE MERC.id = :id_merc;
END^


ALTER PROCEDURE SP_MERCANCIAS_INS (
    CLIENTE VARCHAR(50),
    ORIGEN INTEGER,
    DESTINO INTEGER,
    MERC_TIPO INTEGER,
    PESO FLOAT,
    CANTIDAD INTEGER,
    PESO_TIPO INTEGER,
    FEC_SALIDA DATE,
    FEC_ENTREGA DATE,
    FLETE FLOAT,
    OBS VARCHAR(250))
AS
BEGIN
    INSERT INTO mercancias VALUES (
    gen_id(gen_mercancia_id,1),
    :cliente,
    :origen,
    :destino,
    :merc_tipo,
    :peso,
    :cantidad,
    :peso_tipo,
    :fec_salida,
    :fec_entrega,
    :flete,
    :obs,
    0);
END^


ALTER PROCEDURE SP_MERCANCIAS_MOD (
    ID_MERC INTEGER,
    CLIENTE VARCHAR(50),
    ORIGEN INTEGER,
    DESTINO INTEGER,
    MERC_TIPO INTEGER,
    PESO FLOAT,
    CANTIDAD INTEGER,
    PESO_TIPO INTEGER,
    FEC_SALIDA DATE,
    FEC_ENTREGA DATE,
    FLETE FLOAT,
    OBS VARCHAR(250))
AS
BEGIN
    UPDATE mercancias MERC
    SET
        MERC.cliente = :cliente,
        MERC.pais_origen = :origen,
        MERC.pais_destino = :destino,
        MERC.merc_tipo = :merc_tipo,
        MERC.peso = :peso,
        MERC.cantidad = :cantidad,
        MERC.peso_tipo = :peso_tipo,
        MERC.fec_salida = :fec_salida,
        MERC.fec_entrega = :fec_entrega,
        MERC.flete = :flete,
        MERC.observaciones = :obs
    WHERE
        MERC.id = :id_merc;
END^



SET TERM ; ^
